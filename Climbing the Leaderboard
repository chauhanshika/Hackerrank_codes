#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'climbingLeaderboard' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY ranked
#  2. INTEGER_ARRAY player
#

def climbingLeaderboard(ranked, player):
    # Step 1: Create a leaderboard with unique scores
    unique_ranked = sorted(set(ranked), reverse=True)
    
    result = []
    n = len(unique_ranked)
    index = n - 1   # start from the lowest rank
    
    # Step 2: For each player's score, determine their rank
    for score in player:
        while index >= 0 and score >= unique_ranked[index]:
            index -= 1
        # rank is index+2 because index+1 would be the next higher rank,
        # but since index moved one step back, add 1 more
        result.append(index + 2)
    
    return result


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ranked_count = int(input().strip())
    ranked = list(map(int, input().rstrip().split()))

    player_count = int(input().strip())
    player = list(map(int, input().rstrip().split()))

    result = climbingLeaderboard(ranked, player)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
